"""empty message

Revision ID: e3615a83ea32
Revises: 7b4dce664981
Create Date: 2019-05-09 15:39:47.218655

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e3615a83ea32'
down_revision = '7b4dce664981'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bet',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('summ', sa.Integer(), nullable=True),
    sa.Column('creationDate', sa.DateTime(timezone=4), nullable=True),
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.Column('walker_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['request_id'], ['request.id'], ),
    sa.ForeignKeyConstraint(['walker_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('review_violations')
    op.drop_table('review')
    op.drop_table('rate')
    op.drop_table('violation')
    op.add_column('request', sa.Column('auctionEndDate', sa.DateTime(timezone=4), nullable=True))
    op.add_column('request', sa.Column('auctionStartDate', sa.DateTime(timezone=4), nullable=True))
    op.add_column('request', sa.Column('finalPrice', sa.Integer(), nullable=True))
    op.add_column('request', sa.Column('ownerEndMarkDate', sa.DateTime(timezone=4), nullable=True))
    op.add_column('request', sa.Column('startingPrice', sa.Integer(), nullable=True))
    op.add_column('request', sa.Column('walkDuration', sa.Integer(), nullable=True))
    op.add_column('request', sa.Column('walkStartDate', sa.DateTime(timezone=4), nullable=True))
    op.add_column('request', sa.Column('walkerEndMarkDate', sa.DateTime(timezone=4), nullable=True))
    op.drop_constraint('request_walker_id_fkey', 'request', type_='foreignkey')
    op.create_foreign_key(None, 'request', 'user', ['walker_id'], ['id'])
    op.drop_column('request', 'priceN')
    op.drop_column('request', 'endAuctionDate')
    op.drop_column('request', 'priceP')
    op.drop_column('request', 'endOwnerDate')
    op.drop_column('request', 'endWalkerDate')
    op.drop_column('request', 'timeWalk')
    op.drop_column('request', 'startWalkDate')
    op.drop_column('request', 'startAuctionDate')
    op.add_column('status', sa.Column('description', sa.Text(), nullable=True))
    op.drop_column('status', 'info')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('status', sa.Column('info', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_column('status', 'description')
    op.add_column('request', sa.Column('startAuctionDate', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('request', sa.Column('startWalkDate', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('request', sa.Column('timeWalk', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('request', sa.Column('endWalkerDate', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('request', sa.Column('endOwnerDate', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('request', sa.Column('priceP', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('request', sa.Column('endAuctionDate', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('request', sa.Column('priceN', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'request', type_='foreignkey')
    op.create_foreign_key('request_walker_id_fkey', 'request', 'walker', ['walker_id'], ['id'])
    op.drop_column('request', 'walkerEndMarkDate')
    op.drop_column('request', 'walkStartDate')
    op.drop_column('request', 'walkDuration')
    op.drop_column('request', 'startingPrice')
    op.drop_column('request', 'ownerEndMarkDate')
    op.drop_column('request', 'finalPrice')
    op.drop_column('request', 'auctionStartDate')
    op.drop_column('request', 'auctionEndDate')
    op.create_table('review_violations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('review_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('violation_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['review_id'], ['review.id'], name='review_violations_review_id_fkey'),
    sa.ForeignKeyConstraint(['violation_id'], ['violation.id'], name='review_violations_violation_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='review_violations_pkey')
    )
    op.create_table('violation',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('info', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='violation_pkey')
    )
    op.create_table('rate',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('summa', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('creationDate', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('request_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('walker_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['request_id'], ['request.id'], name='rate_request_id_fkey'),
    sa.ForeignKeyConstraint(['walker_id'], ['walker.id'], name='rate_walker_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='rate_pkey')
    )
    op.create_table('review',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('comment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('mark', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('walker_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='review_user_id_fkey'),
    sa.ForeignKeyConstraint(['walker_id'], ['walker.id'], name='review_walker_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='review_pkey')
    )
    op.drop_table('bet')
    # ### end Alembic commands ###
